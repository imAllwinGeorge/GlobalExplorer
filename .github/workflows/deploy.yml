name: Deploy to Azure Container Apps (Compose)

on:
  push:
    branches:
      - main

env:
  RESOURCE_GROUP: ${{ secrets.ACR_RESOURCE_GROUP }}
  ENV_NAME: ${{ secrets.CONTAINERAPPS_ENV }}
  LOCATION: ${{ secrets.LOCATION }}
  ACR_LOGIN_SERVER: ${{ secrets.ACR_LOGIN_SERVER }}
  ACR_NAME: ${{ secrets.ACR_USERNAME }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout repository (with submodules)
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      # 2Ô∏è‚É£ Log in to Azure
      - name: Log in to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # 3Ô∏è‚É£ Log in to Azure Container Registry (ACR)
      - name: Log in to ACR
        run: az acr login --name $ACR_NAME

      # 4Ô∏è‚É£ Generate .env.build file for frontend
      - name: Generate frontend .env.build
        run: |
          echo "Generating frontend .env.build..."
          cat <<EOF > .env.build
          VITE_API_BASE_URL=${{ secrets.VITE_API_BASE_URL }}
          VITE_BASE_URL=${{ secrets.VITE_BASE_URL }}
          VITE_MAP_API=${{ secrets.VITE_MAP_API }}
          VITE_IMG_URL=${{ secrets.VITE_IMG_URL }}
          VITE_RAZORPAY_KEY_ID=${{ secrets.VITE_RAZORPAY_KEY_ID }}
          VITE_GET_GEOLOCATION=${{ secrets.VITE_GET_GEOLOCATION }}
          VITE_RAZORPAY_CHECKOUT_URL=${{ secrets.VITE_RAZORPAY_CHECKOUT_URL }}
          EOF

      # 5Ô∏è‚É£ Create backend .env file (for build and runtime)
      - name: Create backend .env file
        run: |
          echo "Creating backend/.env..."
          mkdir -p backend
          cat <<EOF > backend/.env
          ALLOWED_ORIGIN=${{ secrets.ALLOWED_ORIGIN }}
          FRONT_END_URL=${{ secrets.FRONT_END_URL }}
          NODE_ENV=${{ secrets.NODE_ENV }}
          MONGODB_URI=${{ secrets.MONGODB_URI }}
          SESSION_SECRET=${{ secrets.SESSION_SECRET }}
          GMAIL_PASSWORD=${{ secrets.GMAIL_PASSWORD }}
          GMAIL_ID=${{ secrets.GMAIL_ID }}
          ACCESS_TOKEN_SECRET=${{ secrets.ACCESS_TOKEN_SECRET }}
          REFRESH_TOKEN_SECRET=${{ secrets.REFRESH_TOKEN_SECRET }}
          RESET_TOKEN_SECRET=${{ secrets.RESET_TOKEN_SECRET }}
          GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
          GOOGLE_CALLBACK_URL=${{ secrets.GOOGLE_CALLBACK_URL }}
          REDIS_USERNAME=${{ secrets.REDIS_USERNAME }}
          REDIS_PASS=${{ secrets.REDIS_PASS }}
          REDIS_HOST=${{ secrets.REDIS_HOST }}
          REDIS_PORT=${{ secrets.REDIS_PORT }}
          REDIS_URL=${{ secrets.REDIS_URL }}
          RAZORPAY_KEY_ID=${{ secrets.RAZORPAY_KEY_ID }}
          RAZORPAY_KEY_SECRET=${{ secrets.RAZORPAY_KEY_SECRET }}
          RAZORPAY_KEY=${{ secrets.RAZORPAY_KEY }}
          CLOUDINARY_URL=${{ secrets.CLOUDINARY_URL }}
          CLOUDINARY_API_KEY=${{ secrets.CLOUDINARY_API_KEY }}
          CLOUDINARY_SECRET=${{ secrets.CLOUDINARY_SECRET }}
          CLOUDINARY_CLOUD_NAME=${{ secrets.CLOUDINARY_CLOUD_NAME }}
          EOF

      # 6Ô∏è‚É£ Build backend Docker image
      - name: Build backend image
        run: |
          echo "Building backend image..."
          docker build -t globalexplorer-backend:latest -f backend/Dockerfile backend

      # 7Ô∏è‚É£ Build frontend Docker image with build args (important)
      - name: Build frontend image
        run: |
          echo "Building frontend image with build args..."
          docker build \
            -t globalexplorer-frontend:latest \
            --build-arg VITE_API_BASE_URL=${{ secrets.VITE_API_BASE_URL }} \
            --build-arg VITE_BASE_URL=${{ secrets.VITE_BASE_URL }} \
            --build-arg VITE_MAP_API=${{ secrets.VITE_MAP_API }} \
            --build-arg VITE_IMG_URL=${{ secrets.VITE_IMG_URL }} \
            --build-arg VITE_RAZORPAY_KEY_ID=${{ secrets.VITE_RAZORPAY_KEY_ID }} \
            --build-arg VITE_GET_GEOLOCATION=${{ secrets.VITE_GET_GEOLOCATION }} \
            --build-arg VITE_RAZORPAY_CHECKOUT_URL=${{ secrets.VITE_RAZORPAY_CHECKOUT_URL }} \
            -f frontend/Dockerfile frontend

      # 8Ô∏è‚É£ Tag & Push images to ACR
      - name: Tag and Push images to ACR
        run: |
          echo "Tagging and pushing images to ACR..."
          docker tag globalexplorer-backend:latest $ACR_LOGIN_SERVER/globalexplorer-backend:latest
          docker tag globalexplorer-frontend:latest $ACR_LOGIN_SERVER/globalexplorer-frontend:latest

          docker push $ACR_LOGIN_SERVER/globalexplorer-backend:latest
          docker push $ACR_LOGIN_SERVER/globalexplorer-frontend:latest

      # 9Ô∏è‚É£ Replace registry placeholder in the deploy file
      - name: Replace registry placeholder in deploy file
        run: |
          echo "Replacing ACR_LOGIN_SERVER with $ACR_LOGIN_SERVER in deploy file"
          sed -i "s|ACR_LOGIN_SERVER|$ACR_LOGIN_SERVER|g" docker-compose.deploy.yml

      # üîü Deploy base structure using Compose
      - name: Deploy base structure to Azure Container Apps
        run: |
          echo "Deploying base structure using docker-compose.deploy.yml..."
          az containerapp compose create \
            --resource-group $RESOURCE_GROUP \
            --environment $ENV_NAME \
            --compose-file-path docker-compose.deploy.yml \
            --registry-server $ACR_LOGIN_SERVER \
            --registry-username ${{ secrets.ACR_USERNAME }} \
            --registry-password ${{ secrets.ACR_PASSWORD }} \
            --location $LOCATION

      # 1Ô∏è‚É£1Ô∏è‚É£ Set backend secrets and environment variables
      - name: Set backend secrets and environment variables
        run: |
          echo "Setting backend secrets and env vars..."
          az containerapp secret set --name backend --resource-group $RESOURCE_GROUP \
            --secrets \
              "razorpay-key-id=${{ secrets.RAZORPAY_KEY_ID }}" \
              "razorpay-key-secret=${{ secrets.RAZORPAY_KEY_SECRET }}" \
              "mongodb-uri=${{ secrets.MONGODB_URI }}" \
              "session-secret=${{ secrets.SESSION_SECRET }}" \
              "gmail-password=${{ secrets.GMAIL_PASSWORD }}" \
              "gmail-id=${{ secrets.GMAIL_ID }}" \
              "access-token-secret=${{ secrets.ACCESS_TOKEN_SECRET }}" \
              "refresh-token-secret=${{ secrets.REFRESH_TOKEN_SECRET }}" \
              "reset-token-secret=${{ secrets.RESET_TOKEN_SECRET }}" \
              "google-client-id=${{ secrets.GOOGLE_CLIENT_ID }}" \
              "google-client-secret=${{ secrets.GOOGLE_CLIENT_SECRET }}" \
              "google-callback-url=${{ secrets.GOOGLE_CALLBACK_URL }}" \
              "redis-username=${{ secrets.REDIS_USERNAME }}" \
              "redis-pass=${{ secrets.REDIS_PASS }}" \
              "redis-port=${{ secrets.REDIS_PORT }}" \
              "redis-url=${{ secrets.REDIS_URL }}" \
              "redis-host=${{ secrets.REDIS_HOST }}" \
              "razorpay-key=${{ secrets.RAZORPAY_KEY }}" \
              "cloudinary-url=${{ secrets.CLOUDINARY_URL }}" \
              "cloudinary-api-key=${{ secrets.CLOUDINARY_API_KEY }}" \
              "cloudinary-secret=${{ secrets.CLOUDINARY_SECRET }}" \
              "cloudinary-cloud-name=${{ secrets.CLOUDINARY_CLOUD_NAME }}" \
              "allowed-origin=${{ secrets.ALLOWED_ORIGIN }}" \
              "front-end-url=${{ secrets.FRONT_END_URL }}" \
              "node-env=${{ secrets.NODE_ENV }}"

          az containerapp update -n backend -g $RESOURCE_GROUP \
            --set-env-vars \
              "REDIS_HOST=secretref:redis-host" \
              "REDIS_PASS=secretref:redis-pass" \
              "REDIS_PORT=secretref:redis-port" \
              "REDIS_USERNAME=secretref:redis-username" \
              "REDIS_URL=secretref:redis-url" \
              "RAZORPAY_KEY_ID=secretref:razorpay-key-id" \
              "RAZORPAY_KEY_SECRET=secretref:razorpay-key-secret" \
              "MONGODB_URI=secretref:mongodb-uri" \
              "SESSION_SECRET=secretref:session-secret" \
              "GMAIL_PASSWORD=secretref:gmail-password" \
              "GMAIL_ID=secretref:gmail-id" \
              "ACCESS_TOKEN_SECRET=secretref:access-token-secret" \
              "REFRESH_TOKEN_SECRET=secretref:refresh-token-secret" \
              "RESET_TOKEN_SECRET=secretref:reset-token-secret" \
              "GOOGLE_CLIENT_ID=secretref:google-client-id" \
              "GOOGLE_CLIENT_SECRET=secretref:google-client-secret" \
              "GOOGLE_CALLBACK_URL=secretref:google-callback-url" \
              "RAZORPAY_KEY=secretref:razorpay-key" \
              "CLOUDINARY_URL=secretref:cloudinary-url" \
              "CLOUDINARY_API_KEY=secretref:cloudinary-api-key" \
              "CLOUDINARY_SECRET=secretref:cloudinary-secret" \
              "CLOUDINARY_CLOUD_NAME=secretref:cloudinary-cloud-name" \
              "ALLOWED_ORIGIN=secretref:allowed-origin" \
              "FRONT_END_URL=secretref:front-end-url" \
              "NODE_ENV=secretref:node-env"

      # 1Ô∏è‚É£2Ô∏è‚É£ Update frontend BACKEND_URL for runtime
      - name: Update frontend BACKEND_URL
        run: |
          echo "Fetching backend URL..."
          BACKEND_URL=$(az containerapp show -n backend -g $RESOURCE_GROUP --query properties.configuration.ingress.fqdn -o tsv)
          echo "Backend URL is $BACKEND_URL"
          az containerapp update \
            -n frontend \
            -g $RESOURCE_GROUP \
            --set-env-vars BACKEND_URL=https://$BACKEND_URL
