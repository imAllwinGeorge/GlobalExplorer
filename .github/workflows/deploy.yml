name: Deploy to Azure Container Apps (Compose)

on:
  push:
    branches:
      - main

env:
  RESOURCE_GROUP: ${{ secrets.ACR_RESOURCE_GROUP }}
  ENV_NAME: ${{ secrets.CONTAINERAPPS_ENV }}
  LOCATION: ${{ secrets.LOCATION }}
  ACR_LOGIN_SERVER: ${{ secrets.ACR_LOGIN_SERVER }}
  ACR_NAME: ${{ secrets.ACR_USERNAME }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'

      # 2️⃣ Log in to Azure
      - name: Log in to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # 3️⃣ Log in to Azure Container Registry (ACR)
      - name: Log in to ACR
        run: az acr login --name $ACR_NAME

      # 4️⃣ Generate frontend .env.build
      - name: Generate frontend .env.build
        run: |
          echo "Generating frontend .env.build..."
          cat <<EOF > .env.build
          VITE_API_BASE_URL=${{ secrets.VITE_API_BASE_URL }}
          VITE_BASE_URL=${{ secrets.VITE_BASE_URL }}
          VITE_MAP_API=${{ secrets.VITE_MAP_API }}
          VITE_IMG_URL=${{ secrets.VITE_IMG_URL }}
          VITE_RAZORPAY_KEY_ID=${{ secrets.VITE_RAZORPAY_KEY_ID }}
          VITE_GET_GEOLOCATION=${{ secrets.VITE_GET_GEOLOCATION }}
          EOF

      # 5️⃣ Create backend/.env with all sensitive backend secrets
      - name: Create backend .env file
        run: |
          echo "Creating backend/.env..."
          mkdir -p backend
          cat <<EOF > backend/.env
          ALLOWED_ORIGIN=${{ secrets.ALLOWED_ORIGIN }}
          FRONT_END_URL=${{ secrets.FRONT_END_URL }}
          NODE_ENV=${{ secrets.NODE_ENV }}
          MONGODB_URI=${{ secrets.MONGODB_URI }}
          SESSION_SECRET=${{ secrets.SESSION_SECRET }}
          GMAIL_PASSWORD=${{ secrets.GMAIL_PASSWORD }}
          GMAIL_ID=${{ secrets.GMAIL_ID }}
          ACCESS_TOKEN_SECRET=${{ secrets.ACCESS_TOKEN_SECRET }}
          REFRESH_TOKEN_SECRET=${{ secrets.REFRESH_TOKEN_SECRET }}
          RESET_TOKEN_SECRET=${{ secrets.RESET_TOKEN_SECRET }}
          GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
          GOOGLE_CALLBACK_URL=${{ secrets.GOOGLE_CALLBACK_URL }}
          REDIS_USERNAME=${{ secrets.REDIS_USERNAME }}
          REDIS_PASS=${{ secrets.REDIS_PASS }}
          REDIS_HOST=redis
          REDIS_PORT=${{ secrets.REDIS_PORT }}
          REDIS_URL=${{ secrets.REDIS_URL }}
          RAZORPAY_KEY_ID=${{ secrets.RAZORPAY_KEY_ID }}
          RAZORPAY_KEY_SECRET=${{ secrets.RAZORPAY_KEY_SECRET }}
          RAZORPAY_KEY=${{ secrets.RAZORPAY_KEY }}
          CLOUDINARY_URL=${{ secrets.CLOUDINARY_URL }}
          CLOUDINARY_API_KEY=${{ secrets.CLOUDINARY_API_KEY }}
          CLOUDINARY_SECRET=${{ secrets.CLOUDINARY_SECRET }}
          CLOUDINARY_CLOUD_NAME=${{ secrets.CLOUDINARY_CLOUD_NAME }}
          EOF

      # 6️⃣ Build and tag images using docker compose
      - name: Build Docker images using Compose
        run: |
          echo "Building Docker images using docker-compose.prod.yml..."
          docker compose -f docker-compose.prod.yml --env-file .env.build build

      # 7️⃣ Tag & Push to ACR
        # after building, tag & push images to your ACR
      - name: Tag and Push images to ACR
        run: |
          echo "Tagging and pushing images to ACR..."
          docker tag globalexplorer-backend:latest $ACR_LOGIN_SERVER/globalexplorer-backend:latest
          docker tag globalexplorer-frontend:latest $ACR_LOGIN_SERVER/globalexplorer-frontend:latest

          docker push $ACR_LOGIN_SERVER/globalexplorer-backend:latest
          docker push $ACR_LOGIN_SERVER/globalexplorer-frontend:latest

      # 8️⃣ Deploy to Azure Container Apps (Compose)
      - name: Deploy to Azure Container Apps
        run: |
          echo "Deploying to Azure Container Apps..."
          az containerapp compose create \
            --resource-group $RESOURCE_GROUP \
            --environment $ENV_NAME \
            --compose-file-path docker-compose.deploy.yml \
            --registry-server $ACR_LOGIN_SERVER \
            --registry-username ${{ secrets.ACR_USERNAME }} \
            --registry-password ${{ secrets.ACR_PASSWORD }} \
            --location $LOCATION
